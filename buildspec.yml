version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: us-east-2
    AWS_ACCOUNT_ID: 025707650043
    IMAGE_REPO_NAME: nodepipeline-devops
    IMAGE_TAG: latest

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - echo "Region:$AWS_DEFAULT_REGION"
      - echo "Account ID:$AWS_ACCOUNT_ID"
      - echo "Image Repo Name:$IMAGE_REPO_NAME"
      - echo "Checking AWS credentials..."
      - aws sts get-caller-identity
      - echo "Checking if ECR repository exists..."
      - |
        if aws ecr describe-repositories --repository-names $IMAGE_REPO_NAME --region $AWS_DEFAULT_REGION 2>/dev/null; then
          echo "Repository $IMAGE_REPO_NAME already exists"
        else
          echo "Repository $IMAGE_REPO_NAME does not exist, creating..."
          aws ecr create-repository --repository-name $IMAGE_REPO_NAME --region $AWS_DEFAULT_REGION
        fi
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Performing Docker login..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:latest
      - docker tag $IMAGE_REPO_NAME:latest $REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $REPOSITORY_URI:latest > imagedefinitions.json
      - cat imagedefinitions.json 
artifacts:
    files: 
      - imagedefinitions.json